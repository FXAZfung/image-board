definitions:
  common.PageResp:
    properties:
      content: {}
      total:
        type: integer
    type: object
  handles.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handles.LoginResp:
    properties:
      expire:
        type: string
      token:
        type: string
    type: object
  model.Image:
    properties:
      content_type:
        type: string
      created_at:
        type: string
      description:
        type: string
      download_count:
        description: 下载次数
        type: integer
      file_name:
        type: string
      hash:
        type: string
      height:
        type: integer
      id:
        type: integer
      is_deleted:
        type: boolean
      is_public:
        type: boolean
      original_name:
        type: string
      path:
        description: 图片路径
        type: string
      size:
        type: integer
      tags:
        description: 标签，多对多关系
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      thumbnail_path:
        description: 缩略图路径
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      view_count:
        description: 浏览次数
        type: integer
      width:
        type: integer
    type: object
  model.PageReq:
    properties:
      page:
        type: integer
      per_page:
        type: integer
    type: object
  model.SettingItem:
    properties:
      flag:
        description: 0 = public, 1 = private, 2 = readonly, 3 = deprecated, etc.
        type: integer
      group:
        description: use to group setting in frontend
        type: integer
      help:
        description: help message
        type: string
      index:
        type: integer
      key:
        description: unique key
        type: string
      options:
        description: values for select
        type: string
      type:
        description: string, number, bool, select
        type: string
      value:
        description: value
        type: string
    required:
    - key
    type: object
  model.Tag:
    properties:
      count:
        description: 使用此标签的图片数量
        type: integer
      created_at:
        type: string
      id:
        type: integer
      name:
        description: 标签名称，唯一且索引
        type: string
      updated_at:
        type: string
    type: object
  request.AddTagsReq:
    properties:
      tags:
        items:
          type: string
        type: array
    required:
    - tags
    type: object
  request.CreateTagReq:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  request.UpdateImageReq:
    properties:
      description:
        type: string
      is_public:
        type: boolean
      main_tag:
        type: string
    type: object
  response.ImageCountResponse:
    properties:
      count:
        example: 42
        type: integer
    type: object
  response.ImageDeleteResponse:
    properties:
      id:
        example: 1
        type: integer
      message:
        example: Image deleted successfully
        type: string
    type: object
  response.ImageTagResponse:
    properties:
      image_id:
        type: integer
      success:
        type: boolean
      tags:
        items:
          type: integer
        type: array
    type: object
  response.ImageUploadResponse:
    properties:
      id:
        example: 1
        type: integer
      path:
        example: abc123.jpg
        type: string
    type: object
  response.TagDeleteResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/auth/images/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定ID的图片及其关联数据
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 图片ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 图片删除成功响应
          schema:
            $ref: '#/definitions/response.ImageDeleteResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除图片
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: 更新图片的描述、可见性等信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 图片ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新信息
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/request.UpdateImageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 图片更新成功相应
          schema:
            $ref: '#/definitions/model.Image'
      security:
      - ApiKeyAuth: []
      summary: 更新图片信息
      tags:
      - auth
  /api/auth/images/{id}/tags:
    post:
      consumes:
      - application/json
      description: 给图片添加一个或多个标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 图片ID
        in: path
        name: id
        required: true
        type: integer
      - description: 标签列表
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/request.AddTagsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 添加标签成功响应
          schema:
            $ref: '#/definitions/response.ImageTagResponse'
      security:
      - ApiKeyAuth: []
      summary: 给图片添加标签
      tags:
      - auth
  /api/auth/images/{id}/tags/{tag_id}:
    delete:
      consumes:
      - application/json
      description: 从图片中移除指定标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 图片ID
        in: path
        name: id
        required: true
        type: integer
      - description: 标签ID
        in: path
        name: tag_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 移除标签成功响应
          schema:
            $ref: '#/definitions/response.ImageTagResponse'
      security:
      - ApiKeyAuth: []
      summary: 从图片中移除标签
      tags:
      - auth
  /api/auth/logout:
    get:
      consumes:
      - application/json
      description: 登出
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            type: string
      summary: 登出
      tags:
      - auth
  /api/auth/tags:
    post:
      consumes:
      - application/json
      description: Create a new tag in the system
      parameters:
      - description: Bearer user token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag to create
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/request.CreateTagReq'
      produces:
      - application/json
      responses:
        "200":
          description: Created tag
          schema:
            $ref: '#/definitions/model.Tag'
      security:
      - ApiKeyAuth: []
      summary: Create a new tag
      tags:
      - tag
  /api/auth/tags/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a tag and remove it from all associated images
      parameters:
      - description: Bearer user token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tag deletion response
          schema:
            $ref: '#/definitions/response.TagDeleteResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a tag
      tags:
      - tag
    put:
      consumes:
      - application/json
      description: Update an existing tag's information
      parameters:
      - description: Bearer user token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated tag information
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/request.CreateTagReq'
      produces:
      - application/json
      responses:
        "200":
          description: Updated tag
          schema:
            $ref: '#/definitions/model.Tag'
      security:
      - ApiKeyAuth: []
      summary: Update a tag
      tags:
      - tag
  /api/auth/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传新图片并可选添加描述、主标签等信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 图片文件
        in: formData
        name: image
        required: true
        type: file
      - description: 描述
        in: formData
        name: description
        type: string
      - description: 是否公开
        in: formData
        name: is_public
        type: boolean
      - description: 主标签
        in: formData
        name: main_tag
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 上传图片成功响应
          schema:
            $ref: '#/definitions/response.ImageUploadResponse'
      security:
      - ApiKeyAuth: []
      summary: 上传图片
      tags:
      - auth
  /api/private/setting:
    delete:
      consumes:
      - application/json
      description: 删除设置
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 删除设置
      tags:
      - setting
    get:
      consumes:
      - application/json
      description: 获取设置
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: key
        in: query
        name: key
        type: string
      - description: keys
        in: query
        name: keys
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 设置
          schema:
            type: string
      summary: 获取设置
      tags:
      - setting
    post:
      consumes:
      - application/json
      description: 保存设置
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设置
        in: body
        name: settings
        required: true
        schema:
          items:
            $ref: '#/definitions/model.SettingItem'
          type: array
      produces:
      - application/json
      responses: {}
      summary: 保存设置
      tags:
      - setting
  /api/private/setting/token:
    post:
      consumes:
      - application/json
      description: 重置token
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 重置token
      tags:
      - setting
  /api/private/settings:
    get:
      consumes:
      - application/json
      description: 列出设置
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: group
        in: query
        name: group
        type: string
      - description: groups
        in: query
        name: groups
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 设置列表
          schema:
            items:
              $ref: '#/definitions/model.SettingItem'
            type: array
      summary: 列出设置
      tags:
      - setting
  /api/private/users:
    post:
      consumes:
      - application/json
      description: 列出用户列表
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类信息
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.PageResp'
      summary: 列出用户列表
      tags:
      - user
  /api/public/images:
    post:
      consumes:
      - application/json
      description: 分页获取所有图片
      parameters:
      - description: 分页参数
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 图片列表和总数
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResp'
            - properties:
                content:
                  $ref: '#/definitions/model.Image'
              type: object
      summary: 分页列出图片
      tags:
      - image
  /api/public/images/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取图片详细信息，包括标签等
      parameters:
      - description: 图片ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 图片信息
          schema:
            $ref: '#/definitions/model.Image'
      summary: 根据ID获取图片
      tags:
      - image
  /api/public/images/count:
    get:
      consumes:
      - application/json
      description: 获取系统中的图片总数
      produces:
      - application/json
      responses:
        "200":
          description: 图片数量
          schema:
            $ref: '#/definitions/response.ImageCountResponse'
      summary: 获取图片数量
      tags:
      - image
  /api/public/images/tag:
    post:
      consumes:
      - application/json
      description: 获取包含特定标签的所有图片
      parameters:
      - description: 标签名称
        in: query
        name: tag
        required: true
        type: string
      - description: 分页参数
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 图片列表和总数
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResp'
            - properties:
                content:
                  $ref: '#/definitions/model.Image'
              type: object
      summary: 根据标签获取图片
      tags:
      - image
  /api/public/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handles.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/handles.LoginResp'
      summary: 登录
      tags:
      - auth
  /api/public/settings:
    get:
      consumes:
      - application/json
      description: 获取公共设置
      produces:
      - application/json
      responses:
        "200":
          description: 公共设置
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取公共设置
      tags:
      - setting
  /api/public/tags:
    post:
      consumes:
      - application/json
      description: Get a paginated list of all tags
      parameters:
      - description: Pagination parameters
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: Tags list and count
          schema:
            allOf:
            - $ref: '#/definitions/common.PageResp'
            - properties:
                content:
                  items:
                    $ref: '#/definitions/model.Tag'
                  type: array
              type: object
      summary: List tags
      tags:
      - tag
  /api/public/tags/{id}:
    get:
      consumes:
      - application/json
      description: Get tag details by its ID
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tag details
          schema:
            $ref: '#/definitions/model.Tag'
      summary: Get tag by ID
      tags:
      - tag
  /api/public/tags/image/{image_id}:
    get:
      consumes:
      - application/json
      description: Get all tags associated with a specific image
      parameters:
      - description: Image ID
        in: path
        name: image_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of tags
          schema:
            items:
              $ref: '#/definitions/model.Tag'
            type: array
      summary: Get tags for image
      tags:
      - tag
  /api/public/tags/name:
    get:
      consumes:
      - application/json
      description: Get tag details by its name
      parameters:
      - description: Tag name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tag details
          schema:
            $ref: '#/definitions/model.Tag'
      summary: Get tag by name
      tags:
      - tag
  /api/public/tags/popular:
    get:
      consumes:
      - application/json
      description: Get the most popular tags by usage count
      parameters:
      - default: 10
        description: Maximum number of tags to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of popular tags
          schema:
            items:
              $ref: '#/definitions/model.Tag'
            type: array
      summary: Get popular tags
      tags:
      - tag
  /api/public/tags/search:
    get:
      consumes:
      - application/json
      description: Search for tags that start with the given prefix
      parameters:
      - description: Tag prefix to search for
        in: query
        name: prefix
        required: true
        type: string
      - default: 20
        description: Maximum number of results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of matching tags
          schema:
            items:
              $ref: '#/definitions/model.Tag'
            type: array
      summary: Search tags
      tags:
      - tag
  /images/image/{name}:
    get:
      consumes:
      - application/json
      description: 直接返回图片文件
      parameters:
      - description: 文件名
        in: path
        name: name
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: 图片内容
          schema:
            type: file
      summary: 根据文件名获取图片
      tags:
      - image
  /images/image/random:
    get:
      consumes:
      - application/json
      description: 随机获取一个图片，支持按分类过滤
      produces:
      - image/*
      responses:
        "200":
          description: 图片内容
          schema:
            type: file
      summary: 随机获取一个图片
      tags:
      - image
  /images/thumbnail/{name}:
    get:
      consumes:
      - application/json
      description: 根据文件名获取图片的缩略图
      parameters:
      - description: 文件名
        in: path
        name: name
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: 缩略图内容
          schema:
            type: file
      summary: 获取图片缩略图
      tags:
      - image
swagger: "2.0"
