basePath: /
definitions:
  common.PageResp:
    properties:
      content:
        description: 分页内容
      total:
        description: |-
          总记录数
          Example: 100
        type: integer
    type: object
  common.Resp:
    properties:
      code:
        description: |-
          状态码
          Example: 200
        type: integer
      data:
        description: 返回数据
      message:
        description: |-
          消息描述
          Example: success
        type: string
    type: object
  handles.LoginReq:
    properties:
      password:
        description: 密码
        example: admin
        type: string
      username:
        description: 用户名
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  handles.LoginResp:
    properties:
      expire:
        description: Token 过期时间
        example: "2023-10-01T12:00:00Z"
        type: string
      token:
        description: JWT Token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  handles.RegisterReq:
    properties:
      password:
        description: 密码
        example: password123
        type: string
      role:
        description: 角色：2-管理员，0-普通用户 1-游客（只能存在一个）
        example: 1
        type: integer
      username:
        description: 用户名
        example: newuser
        type: string
    required:
    - password
    - username
    type: object
  handles.UpdateUserReq:
    properties:
      disable:
        description: 禁用
        example: true
        type: boolean
      password:
        description: 新密码
        example: newpassword123
        type: string
      role:
        description: 角色
        example: 1
        type: integer
    type: object
  model.Image:
    properties:
      content_type:
        type: string
      created_at:
        type: string
      description:
        type: string
      download_count:
        description: 下载次数
        type: integer
      file_name:
        type: string
      hash:
        type: string
      height:
        type: integer
      id:
        type: integer
      is_public:
        type: boolean
      original_name:
        type: string
      path:
        description: 图片路径
        type: string
      size:
        type: integer
      tags:
        description: 标签，多对多关系
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      thumbnail_path:
        description: 缩略图路径
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      view_count:
        description: 浏览次数
        type: integer
      webp_path:
        type: string
      width:
        type: integer
    type: object
  model.PageReq:
    properties:
      page:
        type: integer
      per_page:
        type: integer
    type: object
  model.SettingItem:
    properties:
      flag:
        description: 0 = public, 1 = private, 2 = readonly, 3 = deprecated, etc.
        type: integer
      group:
        description: use to group setting in frontend
        type: integer
      help:
        description: help message
        type: string
      index:
        type: integer
      key:
        description: unique key
        type: string
      options:
        description: values for select
        type: string
      type:
        description: string, number, bool, select
        type: string
      value:
        description: value
        type: string
    required:
    - key
    type: object
  model.Tag:
    properties:
      count:
        description: 使用此标签的图片数量
        type: integer
      created_at:
        type: string
      id:
        type: integer
      name:
        description: 标签名称，唯一且索引
        type: string
      updated_at:
        type: string
    type: object
  model.User:
    properties:
      disabled:
        type: boolean
      id:
        description: unique key
        type: integer
      permission:
        description: Determine permissions by bit
        type: integer
      role:
        description: user's role
        type: integer
      username:
        description: username
        type: string
    required:
    - username
    type: object
  request.AddTagReq:
    properties:
      id:
        type: integer
      tag:
        type: string
    required:
    - id
    - tag
    type: object
  request.ImageDeleteReq:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.RemoveTagReq:
    properties:
      image_id:
        type: integer
      tag_id:
        type: integer
    required:
    - image_id
    - tag_id
    type: object
  response.ImageDeleteResponse:
    properties:
      id:
        example: 1
        type: integer
      message:
        example: Image deleted successfully
        type: string
    type: object
  response.ImageTagResponse:
    properties:
      image_id:
        type: integer
      success:
        type: boolean
      tag_name:
        type: string
    type: object
  response.TagDeleteResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      success:
        type: boolean
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:4536
info:
  contact: {}
  description: This is a image sharing platform API documentation
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Image Board API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: 通过用户名和密码登录系统并获取令牌
      parameters:
      - description: 用户登录信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handles.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回令牌信息
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/handles.LoginResp'
              type: object
        "400":
          description: 无效请求或密码错误
          schema:
            $ref: '#/definitions/common.Resp'
        "429":
          description: 登录尝试次数过多，请稍后再试
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 生成令牌失败
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 用户登录
      tags:
      - 认证
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: 使当前用户令牌失效
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权，缺少有效令牌
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 令牌失效操作失败
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 用户登出
      tags:
      - 认证
  /api/auth/user/info:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 获取当前登录用户信息
      tags:
      - 认证
  /api/auth/users:
    get:
      consumes:
      - application/json
      description: 分页获取所有用户（需要管理员权限）
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分页结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/common.PageResp'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/model.User'
                        type: array
                    type: object
              type: object
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - 认证
  /api/auth/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定用户（需要管理员权限）
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/common.Resp'
        "400":
          description: ID格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 认证
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户详细信息（需要管理员权限）
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: ID格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取用户信息
      tags:
      - 认证
    put:
      consumes:
      - application/json
      description: 更新指定用户的信息（需要管理员权限或为自己的账号）
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handles.UpdateUserReq'
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新后的用户信息
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.Resp'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - 认证
  /api/auth/users/count:
    get:
      description: 获取系统中的用户总数（需要管理员权限）
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用户总数
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  type: integer
              type: object
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 获取用户总数
      tags:
      - 认证
  /api/image/count:
    get:
      description: 获取系统中的图片总量
      produces:
      - application/json
      responses:
        "200":
          description: 统计结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  type: integer
              type: object
        "500":
          description: 统计失败
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取图片统计
      tags:
      - 图片
  /api/image/delete:
    post:
      consumes:
      - application/json
      description: 永久删除图片及其关联数据（需要登录）
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 删除参数
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/request.ImageDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/response.ImageDeleteResponse'
              type: object
        "400":
          description: 参数格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权，需要登录
          schema:
            $ref: '#/definitions/common.Resp'
        "403":
          description: 无删除权限
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 图片不存在
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 删除图片
      tags:
      - 图片
  /api/image/list:
    post:
      consumes:
      - application/json
      description: 分页获取所有图片基本信息
      parameters:
      - description: 分页参数
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 分页结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/common.PageResp'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/model.Image'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数校验失败
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 分页获取图片列表
      tags:
      - 图片
  /api/image/tag/add:
    post:
      consumes:
      - application/json
      description: 给现有图片添加一个标签（需要登录）
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 添加标签请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.AddTagReq'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/response.ImageTagResponse'
              type: object
        "400":
          description: 请求格式无效
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权，需要登录
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 图片不存在
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 添加图片标签
      tags:
      - 图片
  /api/image/tag/list:
    post:
      consumes:
      - application/json
      description: 分页获取包含指定标签的所有图片
      parameters:
      - description: 标签名称
        in: query
        minLength: 1
        name: tag
        required: true
        type: string
      - description: 分页参数
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 分页结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/common.PageResp'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/model.Image'
                        type: array
                    type: object
              type: object
        "400":
          description: 标签参数缺失或格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 根据标签获取图片
      tags:
      - 图片
  /api/image/tag/remove:
    post:
      consumes:
      - application/json
      description: 从图片中移除指定标签（需要登录）
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 移除标签请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RemoveTagReq'
      produces:
      - application/json
      responses:
        "200":
          description: 操作结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/response.ImageTagResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权，需要登录
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 图片或标签不存在
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 移除图片标签
      tags:
      - 图片
  /api/image/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传图片文件并添加元数据（需要登录）
      parameters:
      - description: 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 图片文件（支持PNG/JPEG/GIF）
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.Image'
              type: object
        "400":
          description: 文件无效/参数错误
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.Resp'
        "413":
          description: 文件过大
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 上传失败
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 上传新图片
      tags:
      - 图片
  /api/public/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账号
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handles.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.Resp'
        "403":
          description: 需要管理权限
          schema:
            $ref: '#/definitions/common.Resp'
        "409":
          description: 用户已存在
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 注册新用户
      tags:
      - 用户
  /api/setting:
    get:
      consumes:
      - application/json
      description: 获取所有公开的系统设置
      produces:
      - application/json
      responses:
        "200":
          description: 公共设置键值对
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "500":
          description: 获取设置失败
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取公共设置
      tags:
      - 设置
  /api/setting/delete:
    delete:
      consumes:
      - application/json
      description: 删除设置
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 删除设置
      tags:
      - 设置
  /api/setting/list:
    get:
      consumes:
      - application/json
      description: 按分组列出系统设置项（需要认证）
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设置分组ID
        in: query
        name: group
        type: string
      - description: 多个设置分组ID，逗号分隔
        in: query
        name: groups
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 设置项列表
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.SettingItem'
                  type: array
              type: object
        "400":
          description: 参数格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权，需要登录
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 查询失败
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 获取系统设置列表
      tags:
      - 设置
  /api/setting/save:
    post:
      consumes:
      - application/json
      description: 保存一组系统设置项
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 设置项列表
        in: body
        name: settings
        required: true
        schema:
          items:
            $ref: '#/definitions/model.SettingItem'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 保存成功
          schema:
            $ref: '#/definitions/common.Resp'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权，需要登录
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 保存失败
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 保存系统设置
      tags:
      - 设置
  /api/setting/setting:
    get:
      consumes:
      - application/json
      description: 获取设置
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: key
        in: query
        name: key
        type: string
      - description: keys
        in: query
        name: keys
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 设置
          schema:
            type: string
      summary: 获取设置
      tags:
      - 设置
  /api/setting/token:
    post:
      consumes:
      - application/json
      description: 重置token
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 重置token
      tags:
      - 设置
  /api/tag/{id}:
    get:
      consumes:
      - application/json
      description: 查询指定ID的标签完整信息
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 标签详情
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.Tag'
              type: object
        "400":
          description: ID格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 根据ID获取标签详情
      tags:
      - 标签
  /api/tag/delete/{id}:
    delete:
      consumes:
      - application/json
      description: 删除标签并移除与所有图片的关联
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 标签ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/response.TagDeleteResponse'
              type: object
        "400":
          description: ID格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.Resp'
      security:
      - ApiKeyAuth: []
      summary: 删除标签
      tags:
      - 标签
  /api/tag/image/{image_id}:
    get:
      consumes:
      - application/json
      description: 获取指定图片关联的所有标签
      parameters:
      - description: 图片ID
        in: path
        name: image_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 标签列表
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tag'
                  type: array
              type: object
        "400":
          description: ID格式错误
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 图片不存在
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取图片关联标签
      tags:
      - 标签
  /api/tag/list:
    post:
      consumes:
      - application/json
      description: 使用分页方式获取所有标签列表
      parameters:
      - description: 分页参数
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/model.PageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 分页结果
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/common.PageResp'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/model.Tag'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数绑定错误
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 分页获取标签列表
      tags:
      - 标签
  /api/tag/name:
    get:
      consumes:
      - application/json
      description: 通过标签名称查询标签信息
      parameters:
      - description: 标签名称
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 标签详情
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  $ref: '#/definitions/model.Tag'
              type: object
        "400":
          description: 名称参数缺失
          schema:
            $ref: '#/definitions/common.Resp'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 根据名称查询标签
      tags:
      - 标签
  /api/tag/popular:
    get:
      consumes:
      - application/json
      description: 根据使用次数降序排列获取最常用标签
      parameters:
      - default: 10
        description: 返回数量限制
        in: query
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 标签列表
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tag'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取热门标签列表
      tags:
      - 标签
  /api/tag/search:
    get:
      consumes:
      - application/json
      description: 通过名称前缀模糊搜索标签
      parameters:
      - description: 搜索前缀
        in: query
        name: prefix
        required: true
        type: string
      - default: 20
        description: 最大返回数量
        in: query
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 匹配的标签列表
          schema:
            allOf:
            - $ref: '#/definitions/common.Resp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tag'
                  type: array
              type: object
        "400":
          description: 前缀参数缺失
          schema:
            $ref: '#/definitions/common.Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 根据前缀搜索标签
      tags:
      - 标签
  /images/image/{name}:
    get:
      description: 根据文件名直接返回图片二进制内容
      parameters:
      - description: 文件名
        example: '"example.jpg"'
        in: path
        name: name
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: 图片文件
          schema:
            type: file
        "404":
          description: 图片不存在
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取原始图片文件
      tags:
      - 图片
  /images/image/random:
    get:
      description: 随机获取一张图片（15分钟内同一IP最多请求15次）
      produces:
      - image/*
      responses:
        "200":
          description: 图片文件
          schema:
            type: file
        "404":
          description: 无可用图片
          schema:
            $ref: '#/definitions/common.Resp'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取随机图片
      tags:
      - 图片
  /images/thumbnail/{name}:
    get:
      description: 获取指定文件的缩略图（自动降级返回原图）
      parameters:
      - description: 文件名
        example: '"example_thumb.jpg"'
        in: path
        name: name
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: 缩略图文件
          schema:
            type: file
        "404":
          description: 文件不存在
          schema:
            $ref: '#/definitions/common.Resp'
      summary: 获取图片缩略图
      tags:
      - 图片
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: '"Type ''YOUR_TOKEN''"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
